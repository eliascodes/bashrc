"
" A (not so) minimal vimrc.
"

" You want Vim, not vi. When Vim finds a vimrc, 'nocompatible' is set anyway.
" We set it explicitely to make our position clear!
set nocompatible

filetype plugin indent on  " Load plugins according to detected filetype.
syntax on                  " Enable syntax highlighting.

set encoding    =utf8      " Set character encoding to UTF-8
set autoindent             " Indent according to previous line.
set expandtab              " Use spaces instead of tabs.
set softtabstop =2         " Tab key indents by 4 spaces.
set shiftwidth  =2         " >> indents by 4 spaces.
set shiftround             " >> indents to next multiple of 'shiftwidth'.

set backspace   =indent,eol,start  " Make backspace work as you would expect.
set hidden                 " Switch between buffers without having to save first.
set laststatus  =2         " Always show statusline.
set display     =lastline  " Show as much as possible of the last line.

set showmode               " Show current mode in command-line.
set showcmd                " Show already typed keys when more are expected.

set incsearch              " Highlight while searching with / or ?.
set hlsearch               " Keep matches highlighted.

set ttyfast                " Faster redrawing.
set lazyredraw             " Only redraw when necessary.

set splitbelow             " Open new windows below the current window.
set splitright             " Open new windows right of the current window.

set cursorline             " Find the current line quickly.
set wrapscan               " Searches wrap around end-of-file.
set report      =0         " Always report changed lines.
set synmaxcol   =200       " Only highlight the first 200 columns.

set relativenumber         " Show line numbers
set nowrap                 " Disable line-wrap

set list                   " Show non-printable characters.
if has('multi_byte') && &encoding ==# 'utf-8'
  let &listchars = 'tab:▸ ,extends:❯,precedes:❮,nbsp:±'
else
  let &listchars = 'tab:> ,extends:>,precedes:<,nbsp:.'
endif

" The fish shell is not very compatible to other shells and unexpectedly
" breaks things that use 'shell'.
if &shell =~# 'fish$'
  set shell=/bin/bash
endif

" Put all temporary files under the same directory.
" https://github.com/mhinz/vim-galore#handling-backup-swap-undo-and-viminfo-files
set backup
set backupdir   =$HOME/.vim/files/backup/
set backupext   =-vimbackup
set backupskip  =
set directory   =$HOME/.vim/files/swap/
set updatecount =100
set undofile
set undodir     =$HOME/.vim/files/undo/
set viminfo     ='100,n$HOME/.vim/files/info/viminfo


" Vim-plug
call plug#begin()                              " Start registering plugins
Plug 'tpope/vim-surround'                      " Parenthesising
Plug 'scrooloose/nerdtree'                     " Directory tree-view
Plug 'bling/vim-airline'                       " Colored command line
Plug 'airblade/vim-gitgutter'                  " Git +/- diff in gutter
Plug 'wikitopian/hardmode'                     " Disable h,j,k,l and arrow keys
Plug 'nathanaelkane/vim-indent-guides'         " Indent guide
Plug 'ryanoasis/vim-devicons'                  " Dev Icons
Plug 'tiagofumo/vim-nerdtree-syntax-highlight' " Highlighting for file types
Plug 'sheerun/vim-polyglot'                    " Multi-language pack
Plug 'danilo-augusto/vim-afterglow'            " Afterglow colorscheme
Plug 'hplewis/vim-quiver'                      " Toggle arrow keys
call plug#end()                                " End plugin registration

" NERDTree
autocmd vimenter * NERDTree   " Start NERDTree on vim startup
map <C-n> :NERDTreeToggle<CR> " Toggle NERDTree with CTRL+n

" Hardmode
nnoremap <leader>h <Esc>:call ToggleHardMode()<CR>  " Set shortcut for toggling hardmode

" Airline
let g:airline#extensions#tabline#enabled = 1  " Show open buffers in tabline
let g:airline_powerline_fonts            = 1  " Enable Powerline fonts in Airline
nnoremap <Tab> :bnext<CR>                     " Cycle to next buffer with TAB
nnoremap <S-Tab> :bprevious<CR>               " Cycle to prev buffer with Shift-TAB

" IndentGuides
let g:indent_guides_enable_on_vim_startup = 1 " Enable indent guides on startup
let g:indent_guides_guide_size            = 1 " Indent guide of a single space

" DevIcons
autocmd FileType nerdtree setlocal nolist
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
if exists("g:loaded_webdevicons")
  call webdevicons#refresh()
endif

" NERDTree syntax highlighting
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName    = 1
let g:NERDTreePatternMatchHighlightFullName  = 1

" Afterglow colorscheme
colorscheme afterglow      " Set theme

" Quiver
nnoremap <leader>k :ToggleArrowKeys<CR>

